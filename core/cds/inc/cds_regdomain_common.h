/*
 * Copyright (c) 2011, 2014-2015 The Linux Foundation. All rights reserved.
 *
 * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
 *
 *
 * Permission to use, copy, modify, and/or distribute this software for
 * any purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * This file was originally distributed by Qualcomm Atheros, Inc.
 * under proprietary terms before Copyright ownership was assigned
 * to the Linux Foundation.
 */

/*
 * Copyright (c) 2002-2009 Sam Leffler, Errno Consulting
 * Copyright (c) 2005-2011 Atheros Communications, Inc.
 * All rights reserved.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * $FreeBSD: release/9.0.0/sys/dev/ath/ath_hal/ah_regdomain/ah_rd_regenum.h 224226 2011-07-20 12:46:58Z adrian $
 */
/*
 * This module contains the common regulatory domain database tables:
 *
 *     - reg domain enum constants
 *     - reg domain enum to reg domain pair mappings
 *     - country to regdomain mappings
 *     - channel tag enums and the frequency-to-frequency band mappings
 *       for all the modes
 *
 * "The country table and respective Regulatory Domain channel and power
 * settings are based on available knowledge as of software release. The
 * underlying global regulatory and spectrum rules change on a regular basis,
 * therefore, no warranty is given that the channel and power information
 * herein is complete, accurate or up to date.  Developers are responsible
 * for regulatory compliance of end-products developed using the enclosed
 * data per all applicable national requirements.  Furthermore, data in this
 * table does not guarantee that spectrum is available and that regulatory
 * approval is possible in every case. Knowldegable regulatory compliance
 * or government contacts should be consulted by the manufacturer to ensure
 * that the most current and accurate settings are used in each end-product.
 * This table was designed so that developers are able to update the country
 * table mappings as well as the Regulatory Domain definitions in order to
 * incorporate the most current channel and power settings in the end-product."
 *
 */

/* Enumerated Regulatory Domain Information 8 bit values indicate that
 * the regdomain is really a pair of unitary regdomains.  12 bit values
 * are the real unitary regdomains and are the only ones which have the
 * frequency bitmasks and flags set.
 */

#include "cds_ieee80211_common.h"
#include <a_types.h>
#include "wlan_defs.h"

#define MAX_CHANNELS_PER_OPERATING_CLASS  25

enum EnumRd {
	/*
	 * The following regulatory domain definitions are
	 * found in the EEPROM. Each regulatory domain
	 * can operate in either a 5GHz or 2.4GHz wireless mode or
	 * both 5GHz and 2.4GHz wireless modes.
	 * In general, the value holds no special
	 * meaning and is used to decode into either specific
	 * 2.4GHz or 5GHz wireless mode for that particular
	 * regulatory domain.
	 */
	NO_ENUMRD = 0x00,
	NULL1_WORLD = 0x03,     /* For 11b-only countries (no 11a allowed) */
	NULL1_ETSIB = 0x07,     /* Israel */
	NULL1_ETSIC = 0x08,
	FCC1_FCCA = 0x10,       /* USA */
	FCC1_WORLD = 0x11,      /* Hong Kong */
	FCC4_FCCA = 0x12,       /* USA - Public Safety */
	FCC5_FCCA = 0x13,       /* US with no DFS (UNII-1 + UNII-3 Only) */
	FCC6_FCCA = 0x14,       /* Canada for AP only */

	FCC2_FCCA = 0x20,       /* Canada */
	FCC2_WORLD = 0x21,      /* Australia & HK */
	FCC2_ETSIC = 0x22,
	FCC6_WORLD = 0x23,      /* Australia for AP only */
	FRANCE_RES = 0x31,      /* Legacy France for OEM */
	FCC3_FCCA = 0x3A,       /* USA & Canada w/5470 band, 11h, DFS enabled */
	FCC3_WORLD = 0x3B,      /* USA & Canada w/5470 band, 11h, DFS enabled */
	FCC3_ETSIC = 0x3F,      /* New Zealand, DFS enabled */

	ETSI1_WORLD = 0x37,
	ETSI3_ETSIA = 0x32,     /* France (optional) */
	ETSI2_WORLD = 0x35,     /* Hungary & others */
	ETSI3_WORLD = 0x36,     /* France & others */
	ETSI4_WORLD = 0x30,
	ETSI4_ETSIC = 0x38,
	ETSI5_WORLD = 0x39,
	ETSI6_WORLD = 0x34,     /* Bulgaria */
	ETSI8_WORLD = 0x3D,     /* Russia */
	ETSI9_WORLD = 0x3E,     /* Ukraine */
	ETSI_RESERVED = 0x33,   /* Reserved (Do not used) */

	MKK1_MKKA = 0x40,       /* Japan (JP1) */
	MKK1_MKKB = 0x41,       /* Japan (JP0) */
	APL4_WORLD = 0x42,      /* Singapore and Morocco */
	MKK2_MKKA = 0x43,       /* Japan with 4.9G channels */
	APL_RESERVED = 0x44,    /* Reserved (Do not used)  */
	APL2_WORLD = 0x45,      /* Korea */
	APL2_APLC = 0x46,
	APL3_WORLD = 0x47,
	MKK1_FCCA = 0x48,       /* Japan (JP1-1) */
	APL2_APLD = 0x49,       /* Korea with 2.3G channels */
	MKK1_MKKA1 = 0x4A,      /* Japan (JE1) */
	MKK1_MKKA2 = 0x4B,      /* Japan (JE2) */
	MKK1_MKKC = 0x4C,       /* Japan (MKK1_MKKA,except Ch14) */
	APL2_FCCA = 0x4D,       /* Mobile customer */
	APL11_FCCA = 0x4F,      /* Specific AP Customer 5GHz, For APs Only */

	APL3_FCCA = 0x50,
	APL12_WORLD = 0x51,
	APL1_WORLD = 0x52,      /* Latin America */
	APL1_FCCA = 0x53,
	APL1_APLA = 0x54,
	APL1_ETSIC = 0x55,
	APL2_ETSIC = 0x56,      /* Venezuela */
	APL5_WORLD = 0x58,      /* Chile */
	APL13_WORLD = 0x5A,     /* Algeria */
	APL6_WORLD = 0x5B,      /* Singapore */
	APL7_FCCA = 0x5C,       /* Taiwan 5.47 Band */
	APL8_WORLD = 0x5D,      /* Malaysia 5GHz */
	APL9_MKKC = 0x5E,      /* Korea 5GHz, Before 11/2007. Now used only by APs */
	APL10_MKKC = 0x5F,     /* Korea 5GHz, After 11/2007. For STAs only */

	/*
	 * World mode SKUs
	 */
	WOR0_WORLD = 0x60,      /* World0 (WO0 SKU) */
	WOR1_WORLD = 0x61,      /* World1 (WO1 SKU) */
	WOR2_WORLD = 0x62,      /* World2 (WO2 SKU) */
	WOR3_WORLD = 0x63,      /* World3 (WO3 SKU) */
	WOR4_WORLD = 0x64,      /* World4 (WO4 SKU) */
	WOR5_ETSIC = 0x65,      /* World5 (WO5 SKU) */

	WOR01_WORLD = 0x66,     /* World0-1 (WW0-1 SKU) */
	WOR02_WORLD = 0x67,     /* World0-2 (WW0-2 SKU) */
	EU1_WORLD = 0x68,       /* Same as World0-2 (WW0-2 SKU), except active scan ch1-13. No ch14 */

	WOR9_WORLD = 0x69,      /* World9 (WO9 SKU) */
	WORA_WORLD = 0x6A,      /* WorldA (WOA SKU) */
	WORB_WORLD = 0x6B,      /* WorldB (WOB SKU) */
	WORC_WORLD = 0x6C,      /* WorldC (WOC SKU) */

	MKK3_MKKB = 0x80,       /* Japan UNI-1 even + MKKB */
	MKK3_MKKA2 = 0x81,      /* Japan UNI-1 even + MKKA2 */
	MKK3_MKKC = 0x82,       /* Japan UNI-1 even + MKKC */

	MKK4_MKKB = 0x83,       /* Japan UNI-1 even + UNI-2 + MKKB */
	MKK4_MKKA2 = 0x84,      /* Japan UNI-1 even + UNI-2 + MKKA2 */
	MKK4_MKKC = 0x85,       /* Japan UNI-1 even + UNI-2 + MKKC */

	MKK5_MKKB = 0x86,       /* Japan UNI-1 even + UNI-2 + mid-band + MKKB */
	MKK5_MKKA2 = 0x87,      /* Japan UNI-1 even + UNI-2 + mid-band + MKKA2 */
	MKK5_MKKC = 0x88,       /* Japan UNI-1 even + UNI-2 + mid-band + MKKC */
	MKK5_MKKA = 0x99,
	MKK5_FCCA = 0x9A,

	MKK6_MKKB = 0x89,       /* Japan UNI-1 even + UNI-1 odd MKKB */
	MKK6_MKKA2 = 0x8A,      /* Japan UNI-1 even + UNI-1 odd + MKKA2 */
	MKK6_MKKC = 0x8B,       /* Japan UNI-1 even + UNI-1 odd + MKKC */

	MKK7_MKKB = 0x8C,       /* Japan UNI-1 even + UNI-1 odd + UNI-2 + MKKB */
	MKK7_MKKA2 = 0x8D,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + MKKA2 */
	MKK7_MKKC = 0x8E,       /* Japan UNI-1 even + UNI-1 odd + UNI-2 + MKKC */

	MKK8_MKKB = 0x8F,       /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + MKKB */
	MKK8_MKKA2 = 0x90,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + MKKA2 */
	MKK8_MKKC = 0x91,       /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + MKKC */

	MKK14_MKKA1 = 0x92,     /* Japan UNI-1 even + UNI-1 odd + 4.9GHz + MKKA1 */
	MKK15_MKKA1 = 0x93,     /* Japan UNI-1 even + UNI-1 odd + UNI-2 + 4.9GHz + MKKA1 */

	MKK10_FCCA = 0xD0,      /* Japan UNI-1 even + UNI-2 + 4.9GHz + FCCA */
	MKK10_MKKA1 = 0xD1,     /* Japan UNI-1 even + UNI-2 + 4.9GHz + MKKA1 */
	MKK10_MKKC = 0xD2,      /* Japan UNI-1 even + UNI-2 + 4.9GHz + MKKC */
	MKK10_MKKA2 = 0xD3,     /* Japan UNI-1 even + UNI-2 + 4.9GHz + MKKA2 */

	MKK11_MKKA = 0xD4,      /* Japan UNI-1 even + UNI-2 + mid-band + 4.9GHz + MKKA */
	MKK11_FCCA = 0xD5,      /* Japan UNI-1 even + UNI-2 + mid-band + 4.9GHz + FCCA */
	MKK11_MKKA1 = 0xD6,     /* Japan UNI-1 even + UNI-2 + mid-band + 4.9GHz + MKKA1 */
	MKK11_MKKC = 0xD7,      /* Japan UNI-1 even + UNI-2 + mid-band + 4.9GHz + MKKC */
	MKK11_MKKA2 = 0xD8,     /* Japan UNI-1 even + UNI-2 + mid-band + 4.9GHz + MKKA2 */

	MKK12_MKKA = 0xD9,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + 4.9GHz + MKKA */
	MKK12_FCCA = 0xDA,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + 4.9GHz + FCCA */
	MKK12_MKKA1 = 0xDB,     /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + 4.9GHz + MKKA1 */
	MKK12_MKKC = 0xDC,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + 4.9GHz + MKKC */
	MKK12_MKKA2 = 0xDD,     /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + 4.9GHz + MKKA2 */

	MKK13_MKKB = 0xDE,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + mid-band + MKKB + All passive + no adhoc */

	/* Following definitions are used only by s/w to map old
	 * Japan SKUs.
	 */
	MKK3_MKKA = 0xF0,       /* Japan UNI-1 even + MKKA */
	MKK3_MKKA1 = 0xF1,      /* Japan UNI-1 even + MKKA1 */
	MKK3_FCCA = 0xF2,       /* Japan UNI-1 even + FCCA */
	MKK4_MKKA = 0xF3,       /* Japan UNI-1 even + UNI-2 + MKKA */
	MKK4_MKKA1 = 0xF4,      /* Japan UNI-1 even + UNI-2 + MKKA1 */
	MKK4_FCCA = 0xF5,       /* Japan UNI-1 even + UNI-2 + FCCA */
	MKK9_MKKA = 0xF6,       /* Japan UNI-1 even + 4.9GHz */
	MKK10_MKKA = 0xF7,      /* Japan UNI-1 even + UNI-2 + 4.9GHz */
	MKK6_MKKA1 = 0xF8,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + MKKA1 */
	MKK6_FCCA = 0xF9,       /* Japan UNI-1 even + UNI-1 odd + UNI-2 + FCCA */
	MKK7_MKKA1 = 0xFA,      /* Japan UNI-1 even + UNI-1 odd + UNI-2 + MKKA1 */
	MKK7_FCCA = 0xFB,       /* Japan UNI-1 even + UNI-1 odd + UNI-2 + FCCA */
	MKK9_FCCA = 0xFC,       /* Japan UNI-1 even + 4.9GHz + FCCA */
	MKK9_MKKA1 = 0xFD,      /* Japan UNI-1 even + 4.9GHz + MKKA1 */
	MKK9_MKKC = 0xFE,       /* Japan UNI-1 even + 4.9GHz + MKKC */
	MKK9_MKKA2 = 0xFF,      /* Japan UNI-1 even + 4.9GHz + MKKA2 */

	/*
	 * Regulator domains ending in a number (e.g. APL1,
	 * MK1, ETSI4, etc) apply to 5GHz channel and power
	 * information.  Regulator domains ending in a letter
	 * (e.g. APLA, FCCA, etc) apply to 2.4GHz channel and
	 * power information.
	 */
	APL1 = 0x0150,          /* LAT & Asia */
	APL2 = 0x0250,          /* LAT & Asia */
	APL3 = 0x0350,          /* Taiwan */
	APL4 = 0x0450,          /* Jordan */
	APL5 = 0x0550,          /* Chile */
	APL6 = 0x0650,          /* Singapore */
	APL7 = 0x0750,          /* Taiwan, disable ch52 */
	APL8 = 0x0850,          /* Malaysia */
	APL9 = 0x0950,          /* Korea. Before 11/2007. Now used only by APs */
	APL10 = 0x1050,         /* Korea. After 11/2007. For STAs only */
	APL11 = 0x1150,         /* Specific AP Customer 5GHz, For APs Only */
	APL12 = 0x1160,         /* Kenya */

	ETSI1 = 0x0130,         /* Europe & others */
	ETSI2 = 0x0230,         /* Europe & others */
	ETSI3 = 0x0330,         /* Europe & others */
	ETSI4 = 0x0430,         /* Europe & others */
	ETSI5 = 0x0530,         /* Europe & others */
	ETSI6 = 0x0630,         /* Europe & others */
	ETSI8 = 0x0830,         /* Russia */
	ETSI9 = 0x0930,         /* Ukraine */
	ETSIA = 0x0A30,         /* France */
	ETSIB = 0x0B30,         /* Israel */
	ETSIC = 0x0C30,         /* Latin America */

	FCC1 = 0x0110,          /* US & others */
	FCC2 = 0x0120,          /* Canada, Australia & New Zealand */
	FCC3 = 0x0160,          /* US w/new middle band & DFS */
	FCC4 = 0x0165,          /* US Public Safety */
	FCC5 = 0x0510,
	FCC6 = 0x0610,          /* Canada & Australia */
	FCCA = 0x0A10,

	APLD = 0x0D50,          /* South Korea */

	MKK1 = 0x0140,          /* Japan (UNI-1 odd) */
	MKK2 = 0x0240,          /* Japan (4.9 GHz + UNI-1 odd) */
	MKK3 = 0x0340,          /* Japan (UNI-1 even) */
	MKK4 = 0x0440,          /* Japan (UNI-1 even + UNI-2) */
	MKK5 = 0x0540,          /* Japan (UNI-1 even + UNI-2 + mid-band) */
	MKK6 = 0x0640,          /* Japan (UNI-1 odd + UNI-1 even) */
	MKK7 = 0x0740,          /* Japan (UNI-1 odd + UNI-1 even + UNI-2 */
	MKK8 = 0x0840,          /* Japan (UNI-1 odd + UNI-1 even + UNI-2 + mid-band) */
	MKK9 = 0x0940,          /* Japan (UNI-1 even + 4.9 GHZ) */
	MKK10 = 0x0B40,         /* Japan (UNI-1 even + UNI-2 + 4.9 GHZ) */
	MKK11 = 0x1140,         /* Japan (UNI-1 even + UNI-2 + 4.9 GHZ) */
	MKK12 = 0x1240,         /* Japan (UNI-1 even + UNI-2 + 4.9 GHZ) */
	MKK13 = 0x0C40,         /* Same as MKK8 but all passive and no adhoc 11a */
	MKK14 = 0x1440,         /* Japan UNI-1 even + UNI-1 odd + 4.9GHz */
	MKK15 = 0x1540,         /* Japan UNI-1 even + UNI-1 odd + UNI-2 + 4.9GHz */
	MKKA = 0x0A40,          /* Japan */
	MKKC = 0x0A50,

	NULL1 = 0x0198,
	WORLD = 0x0199,
	DEBUG_REG_DMN = 0x01ff,
};

enum {                          /* conformance test limits */
	FCC = 0x10,
	MKK = 0x40,
	ETSI = 0x30,
};
/*
 * The following are flags for different requirements per reg domain.
 * These requirements are either inhereted from the reg domain pair or
 * from the unitary reg domain if the reg domain pair flags value is
 * 0
 */

enum {
	NO_REQ = 0x00000000,
	DISALLOW_ADHOC_11A = 0x00000001,
	DISALLOW_ADHOC_11A_TURB = 0x00000002,
	NEED_NFC = 0x00000004,

	ADHOC_PER_11D = 0x00000008,     /* Start Ad-Hoc mode */
	ADHOC_NO_11A = 0x00000010,

	PUBLIC_SAFETY_DOMAIN = 0x00000020,      /* public safety domain */
	LIMIT_FRAME_4MS = 0x00000040,   /* 4msec limit on the frame length */

	NO_HOSTAP = 0x00000080, /* No HOSTAP mode opereation */

	REQ_MASK = 0x000000FF,  /* Requirements bit mask */
};

static const REG_DMN_PAIR_MAPPING ah_cmn_reg_domain_pairs[] = {
	{NO_ENUMRD, DEBUG_REG_DMN, DEBUG_REG_DMN, NO_REQ, NO_REQ, PSCAN_DEFER,
	 0},
	{NULL1_WORLD, NULL1, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{NULL1_ETSIB, NULL1, ETSIB, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{NULL1_ETSIC, NULL1, ETSIC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},

	{FCC2_FCCA, FCC2, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC2_WORLD, FCC2, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC2_ETSIC, FCC2, ETSIC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC3_FCCA, FCC3, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC3_WORLD, FCC3, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC3_ETSIC, FCC3, ETSIC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC4_FCCA, FCC4, FCCA, DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB,
	 NO_REQ, PSCAN_DEFER, 0},
	{FCC5_FCCA, FCC5, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC6_FCCA, FCC6, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC6_WORLD, FCC6, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},

	{ETSI1_WORLD, ETSI1, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI2_WORLD, ETSI2, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI3_WORLD, ETSI3, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI4_WORLD, ETSI4, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI5_WORLD, ETSI5, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI6_WORLD, ETSI6, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI8_WORLD, ETSI8, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{ETSI9_WORLD, ETSI9, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},

	{ETSI3_ETSIA, ETSI3, WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{FRANCE_RES, ETSI3, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},

	{FCC1_WORLD, FCC1, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{FCC1_FCCA, FCC1, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL1_WORLD, APL1, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL2_WORLD, APL2, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL2_FCCA, APL2, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL3_WORLD, APL3, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL4_WORLD, APL4, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL5_WORLD, APL5, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL6_WORLD, APL6, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL7_FCCA, APL7, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL8_WORLD, APL8, WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL9_MKKC, APL9, MKKC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL10_MKKC, APL10, MKKC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL3_FCCA, APL3, FCCA, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL1_ETSIC, APL1, ETSIC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{APL2_ETSIC, APL2, ETSIC, NO_REQ, NO_REQ, PSCAN_DEFER, 0},

	{MKK3_MKKA, MKK3, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKKA, CTRY_JAPAN25},
	{MKK3_MKKB, MKK3, MKKA,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB | NEED_NFC |
	 LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKKA | PSCAN_MKKA_G, CTRY_JAPAN7},
	{MKK3_MKKA1, MKK3, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKKA1 | PSCAN_MKKA1_G, CTRY_JAPAN26},
	{MKK3_MKKA2, MKK3, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKKA2 | PSCAN_MKKA2_G, CTRY_JAPAN8},
	{MKK3_MKKC, MKK3, MKKC,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 NO_PSCAN, CTRY_JAPAN9},
	{MKK3_FCCA, MKK3, FCCA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 NO_PSCAN, CTRY_JAPAN27},

	/* MKK4 */
	{MKK4_MKKA, MKK4, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN36},
	{MKK4_MKKB, MKK4, MKKA,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB | NEED_NFC |
	 LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKK3 | PSCAN_MKKA | PSCAN_MKKA_G,
	 CTRY_JAPAN10},
	{MKK4_MKKA1, MKK4, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA1 | PSCAN_MKKA1_G, CTRY_JAPAN28},
	{MKK4_MKKA2, MKK4, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA2 | PSCAN_MKKA2_G, CTRY_JAPAN11},
	{MKK4_MKKC, MKK4, MKKC,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN12},
	{MKK4_FCCA, MKK4, FCCA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN29},

	/* MKK5 */
/*	{MKK5_MKKA,     MKK5,           MKKA,           DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKK3, CTRY_JAPAN56 },*/
	{MKK5_MKKB, MKK5, MKKA,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB | NEED_NFC |
	 LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKK3 | PSCAN_MKKA | PSCAN_MKKA_G,
	 CTRY_JAPAN13},
	{MKK5_MKKA2, MKK5, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA2 | PSCAN_MKKA2_G, CTRY_JAPAN14},
	{MKK5_MKKC, MKK5, MKKC,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN15},
	{MKK5_FCCA,     MKK5,       FCCA,       DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKK3, CTRY_JAPAN56 },

	{MKK9_MKKA, MKK9, MKKA,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB | NEED_NFC |
	 LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKK3, CTRY_JAPAN34},
	{MKK9_FCCA, MKK9, FCCA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 NO_PSCAN, CTRY_JAPAN37},
	{MKK9_MKKA1, MKK9, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKKA1 | PSCAN_MKKA1_G, CTRY_JAPAN38},
	{MKK9_MKKA2, MKK9, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKKA2 | PSCAN_MKKA2_G, CTRY_JAPAN40},
	{MKK9_MKKC, MKK9, MKKC,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 NO_PSCAN, CTRY_JAPAN39},

	{MKK10_MKKA, MKK10, MKKA,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB | NEED_NFC |
	 LIMIT_FRAME_4MS, NEED_NFC, PSCAN_MKK3, CTRY_JAPAN35},
	{MKK10_FCCA, MKK10, FCCA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN41},
	{MKK10_MKKA1, MKK10, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA1 | PSCAN_MKKA1_G, CTRY_JAPAN42},
	{MKK10_MKKA2, MKK10, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA2 | PSCAN_MKKA2_G, CTRY_JAPAN44},
	{MKK10_MKKC, MKK10, MKKC,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN43},

	{MKK11_MKKA, MKK11, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN45},
	{MKK11_FCCA, MKK11, FCCA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN46},
	{MKK11_MKKA1, MKK11, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA1 | PSCAN_MKKA1_G, CTRY_JAPAN47},
	{MKK11_MKKA2, MKK11, MKKA,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3 | PSCAN_MKKA2 | PSCAN_MKKA2_G, CTRY_JAPAN49},
	{MKK11_MKKC, MKK11, MKKC,
	 DISALLOW_ADHOC_11A_TURB | NEED_NFC | LIMIT_FRAME_4MS, NEED_NFC,
	 PSCAN_MKK3, CTRY_JAPAN48},

	{WOR0_WORLD, WOR0_WORLD, WOR0_WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{WOR1_WORLD, WOR1_WORLD, WOR1_WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{WOR2_WORLD, WOR2_WORLD, WOR2_WORLD, DISALLOW_ADHOC_11A_TURB, NO_REQ,
	 PSCAN_DEFER, 0},
	{WOR3_WORLD, WOR3_WORLD, WOR3_WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{WOR4_WORLD, WOR4_WORLD, WOR4_WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{WOR5_ETSIC, WOR5_ETSIC, WOR5_ETSIC,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{WOR01_WORLD, WOR01_WORLD, WOR01_WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{WOR02_WORLD, WOR02_WORLD, WOR02_WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{EU1_WORLD, EU1_WORLD, EU1_WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
	{WOR9_WORLD, WOR9_WORLD, WOR9_WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{WORA_WORLD, WORA_WORLD, WORA_WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{WORB_WORLD, WORB_WORLD, WORB_WORLD,
	 DISALLOW_ADHOC_11A | DISALLOW_ADHOC_11A_TURB, NO_REQ, PSCAN_DEFER, 0},
	{WORC_WORLD, WORC_WORLD, WORC_WORLD, NO_REQ, NO_REQ, PSCAN_DEFER, 0},
};

static const COUNTRY_CODE_TO_ENUM_RD ah_cmn_all_countries[] = {
	{CTRY_DEBUG, NO_ENUMRD, "DB", "DEBUG", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_DEFAULT, DEF_REGDMN, "NA", "NO_COUNTRY_SET", YES, YES, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_ALBANIA, NULL1_WORLD, "AL", "ALBANIA", YES, NO, YES, YES, YES, NO,
	 NO, NO, 7000},
	{CTRY_ALGERIA, NULL1_WORLD, "DZ", "ALGERIA", YES, NO, YES, YES, YES, NO,
	 NO, NO, 7000},
	{CTRY_ARGENTINA, FCC3_WORLD, "AR", "ARGENTINA", YES, NO, NO, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_ARMENIA, ETSI4_WORLD, "AM", "ARMENIA", YES, NO, YES, YES, YES,
	 YES, NO, NO, 7000},
	{CTRY_ARUBA, ETSI1_WORLD, "AW", "ARUBA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_AUSTRALIA, FCC3_WORLD, "AU", "AUSTRALIA", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_AUSTRIA, ETSI1_WORLD, "AT", "AUSTRIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_AZERBAIJAN, ETSI4_WORLD, "AZ", "AZERBAIJAN", YES, YES, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_BAHAMAS, FCC3_WORLD, "BS", "BAHAMAS", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_BAHRAIN, APL6_WORLD, "BH", "BAHRAIN", YES, NO, YES, YES, YES, YES,
	 NO, NO, 7000},
	{CTRY_BANGLADESH, NULL1_WORLD, "BD", "BANGLADESH", YES, NO, YES, YES,
	 YES, NO, NO, NO, 7000},
	{CTRY_BARBADOS, FCC2_WORLD, "BB", "BARBADOS", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_BELARUS, ETSI1_WORLD, "BY", "BELARUS", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_BELGIUM, ETSI1_WORLD, "BE", "BELGIUM", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_BELIZE, APL1_ETSIC, "BZ", "BELIZE", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_BERMUDA, FCC3_FCCA, "BM", "BERMUDA", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_BOLIVIA, APL1_ETSIC, "BO", "BOLIVIA", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_BOSNIA_HERZ, ETSI1_WORLD, "BA", "BOSNIA AND HERZEGOVINA", YES, NO,
	 YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_BRAZIL, FCC3_WORLD, "BR", "BRAZIL", YES, NO, NO, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_BRUNEI_DARUSSALAM, APL6_WORLD, "BN", "BRUNEI DARUSSALAM", YES,
	 YES, YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_BULGARIA, ETSI1_WORLD, "BG", "BULGARIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_CAMBODIA, ETSI1_WORLD, "KH", "CAMBODIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_CANADA, FCC3_FCCA, "CA", "CANADA", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_CHILE, APL6_WORLD, "CL", "CHILE", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_CHINA, APL1_WORLD, "CN", "CHINA", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_COLOMBIA, FCC1_FCCA, "CO", "COLOMBIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_COSTA_RICA, FCC1_WORLD, "CR", "COSTA RICA", YES, NO, YES, YES,
	 YES, YES, NO, NO, 7000},
	{CTRY_CROATIA, ETSI1_WORLD, "HR", "CROATIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_CYPRUS, ETSI1_WORLD, "CY", "CYPRUS", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_CZECH, ETSI1_WORLD, "CZ", "CZECH REPUBLIC", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_DENMARK, ETSI1_WORLD, "DK", "DENMARK", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_DOMINICAN_REPUBLIC, FCC1_FCCA, "DO", "DOMINICAN REPUBLIC", YES,
	 YES, YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_ECUADOR, FCC1_WORLD, "EC", "ECUADOR", YES, NO, NO, YES, YES, YES,
	 NO, NO, 7000},
	{CTRY_EGYPT, ETSI3_WORLD, "EG", "EGYPT", YES, NO, YES, YES, YES, YES,
	 NO, NO, 7000},
	{CTRY_EL_SALVADOR, FCC1_WORLD, "SV", "EL SALVADOR", YES, NO, YES, YES,
	 YES, YES, NO, NO, 7000},
	{CTRY_ESTONIA, ETSI1_WORLD, "EE", "ESTONIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_FINLAND, ETSI1_WORLD, "FI", "FINLAND", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_FRANCE, ETSI1_WORLD, "FR", "FRANCE", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_GEORGIA, ETSI4_WORLD, "GE", "GEORGIA", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_GERMANY, ETSI1_WORLD, "DE", "GERMANY", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_GREECE, ETSI1_WORLD, "GR", "GREECE", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_GREENLAND, ETSI1_WORLD, "GL", "GREENLAND", YES, NO, YES, YES, YES,
	 YES, NO, NO, 7000},
	{CTRY_GRENADA, FCC3_FCCA, "GD", "GRENADA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_GUAM, FCC1_FCCA, "GU", "GUAM", YES, NO, YES, YES, YES, YES, NO,
	 NO, 7000},
	{CTRY_GUATEMALA, FCC1_FCCA, "GT", "GUATEMALA", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_HAITI, ETSI1_WORLD, "HT", "HAITI", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_HONDURAS, FCC3_WORLD, "HN", "HONDURAS", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_HONG_KONG, FCC3_WORLD, "HK", "HONG KONG", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_HUNGARY, ETSI1_WORLD, "HU", "HUNGARY", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_ICELAND, ETSI1_WORLD, "IS", "ICELAND", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_INDIA, APL6_WORLD, "IN", "INDIA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_INDONESIA, APL2_WORLD, "ID", "INDONESIA", YES, NO, YES, YES, YES,
	 YES, NO, NO, 7000},
	{CTRY_IRAN, APL1_WORLD, "IR", "IRAN", YES, YES, YES, YES, YES, YES, YES,
	 YES, 7000},
	{CTRY_IRELAND, ETSI1_WORLD, "IE", "IRELAND", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_ISRAEL, ETSI3_WORLD, "IL", "ISRAEL", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_ITALY, ETSI1_WORLD, "IT", "ITALY", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_JAMAICA, FCC3_WORLD, "JM", "JAMAICA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_JAPAN14, MKK5_MKKA2, "JP", "JAPAN", YES, NO, NO, YES, YES,
	 YES, NO, NO, 7000},
	{CTRY_JAPAN7, MKK3_MKKB, "JP", "JAPAN7", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN8, MKK3_MKKA2, "JP", "JAPAN8", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN9, MKK3_MKKC, "JP", "JAPAN9", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN10, MKK4_MKKB, "JP", "JAPAN10", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN11, MKK4_MKKA2, "JP", "JAPAN11", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN12, MKK4_MKKC, "JP", "JAPAN12", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN13, MKK5_MKKB, "JP", "JAPAN13", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN14, MKK5_MKKA2, "JP", "JAPAN14", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN15, MKK5_MKKC, "JP", "JAPAN15", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN25, MKK3_MKKA, "JP", "JAPAN25", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN26, MKK3_MKKA1, "JP", "JAPAN26", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN27, MKK3_FCCA, "JP", "JAPAN27", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN28, MKK4_MKKA1, "JP", "JAPAN28", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN29, MKK4_FCCA, "JP", "JAPAN29", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN34, MKK9_MKKA, "JP", "JAPAN34", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN35, MKK10_MKKA, "JP", "JAPAN35", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN36, MKK4_MKKA, "JP", "JAPAN36", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN37, MKK9_FCCA, "JP", "JAPAN37", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN38, MKK9_MKKA1, "JP", "JAPAN38", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN39, MKK9_MKKC, "JP", "JAPAN39", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN40, MKK9_MKKA2, "JP", "JAPAN40", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN41, MKK10_FCCA, "JP", "JAPAN41", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN42, MKK10_MKKA1, "JP", "JAPAN42", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN43, MKK10_MKKC, "JP", "JAPAN43", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN44, MKK10_MKKA2, "JP", "JAPAN44", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN45, MKK11_MKKA, "JP", "JAPAN45", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN46, MKK11_FCCA, "JP", "JAPAN46", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN47, MKK11_MKKA1, "JP", "JAPAN47", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN48, MKK11_MKKC, "JP", "JAPAN48", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN49, MKK11_MKKA2, "JP", "JAPAN49", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_JAPAN55, MKK5_MKKA, "JP", "JAPAN55", YES,  NO,  NO, YES, YES, YES,
	 YES, NO, 7000 },
	{CTRY_JAPAN56, MKK5_FCCA, "JP", "JAPAN56", YES,  NO,  NO,
	 YES, YES, YES, YES, NO, 7000 },
	{CTRY_JORDAN, ETSI2_WORLD, "JO", "JORDAN", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_KAZAKHSTAN, NULL1_WORLD, "KZ", "KAZAKHSTAN", YES, NO, YES, YES,
	 YES, NO, NO, NO, 7000},
	{CTRY_KENYA, APL1_WORLD, "KE", "KENYA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_KOREA_NORTH, APL9_MKKC, "KP", "NORTH KOREA", YES, NO, NO, YES,
	 NO, YES, NO, NO, 7000},
	{CTRY_KOREA_ROC, APL10_MKKC, "KR", "KOREA REPUBLIC", YES, NO, NO, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_KOREA_ROC_AP, APL9_MKKC, "KR", "KOREA REPUBLIC3", YES, NO,
	 NO, YES, NO, YES, NO, NO, 7000},
	{CTRY_KUWAIT, ETSI3_WORLD, "KW", "KUWAIT", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_LATVIA, ETSI1_WORLD, "LV", "LATVIA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_LEBANON, APL1_WORLD, "LB", "LEBANON", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_LIECHTENSTEIN, ETSI1_WORLD, "LI", "LIECHTENSTEIN", YES, NO, YES,
	 YES, YES, YES, YES, YES, 7000},
	{CTRY_LITHUANIA, ETSI1_WORLD, "LT", "LITHUANIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_LUXEMBOURG, ETSI1_WORLD, "LU", "LUXEMBOURG", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_MACAU, FCC2_WORLD, "MO", "MACAU SAR", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_MACEDONIA, ETSI1_WORLD, "MK", "MACEDONIA, FYRO", YES, NO, YES,
	 YES, YES, YES, YES, YES, 7000},
	{CTRY_MALAYSIA, FCC1_WORLD, "MY", "MALAYSIA", YES, NO, NO, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_MALTA, ETSI1_WORLD, "MT", "MALTA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_MAURITIUS, ETSI1_WORLD, "MU", "MAURITIUS", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_MEXICO, FCC1_WORLD, "MX", "MEXICO", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_MONACO, ETSI4_WORLD, "MC", "MONACO", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_MOROCCO, APL4_WORLD, "MA", "MOROCCO", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_NEPAL, APL1_WORLD, "NP", "NEPAL", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_NETHERLANDS, ETSI1_WORLD, "NL", "NETHERLANDS", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_NETHERLANDS_ANTILLES, ETSI1_WORLD, "AN", "NETHERLANDS ANTILLES",
	 YES, NO, YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_NEW_ZEALAND, FCC3_ETSIC, "NZ", "NEW ZEALAND", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_NICARAGUA, FCC3_FCCA, "NI", "NICARAGUA", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_NORWAY, ETSI1_WORLD, "NO", "NORWAY", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_OMAN, FCC3_WORLD, "OM", "OMAN", YES, NO, YES, YES, YES, YES, YES,
	 YES, 7000},
	{CTRY_PAKISTAN, APL1_WORLD, "PK", "PAKISTAN", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_PANAMA, FCC1_FCCA, "PA", "PANAMA", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_PAPUA_NEW_GUINEA, FCC1_WORLD, "PG", "PAPUA NEW GUINEA", YES, YES,
	 YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_PARAGUAY, FCC3_WORLD, "PY", "PARAGUAY", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_PERU, FCC3_WORLD, "PE", "PERU", YES, NO, YES, YES, YES, YES, YES,
	 YES, 7000},
	{CTRY_PHILIPPINES, FCC3_WORLD, "PH", "PHILIPPINES", YES, YES, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_POLAND, ETSI1_WORLD, "PL", "POLAND", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_PORTUGAL, ETSI1_WORLD, "PT", "PORTUGAL", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_PUERTO_RICO, FCC1_FCCA, "PR", "PUERTO RICO", YES, YES, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_QATAR, APL1_WORLD, "QA", "QATAR", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_ROMANIA, ETSI1_WORLD, "RO", "ROMANIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_RUSSIA, ETSI8_WORLD, "RU", "RUSSIA", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_RWANDA, APL1_WORLD, "RW", "RWANDA", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_SAUDI_ARABIA, FCC2_WORLD, "SA", "SAUDI ARABIA", YES, NO, YES, YES,
	 YES, YES, NO, NO, 7000},
	{CTRY_SERBIA, ETSI1_WORLD, "RS", "REPUBLIC OF SERBIA", YES, NO, YES,
	 YES, YES, YES, YES, YES, 7000},
	{CTRY_MONTENEGRO, ETSI1_WORLD, "ME", "MONTENEGRO", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_SINGAPORE, FCC3_WORLD, "SG", "SINGAPORE", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_SLOVAKIA, ETSI1_WORLD, "SK", "SLOVAKIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_SLOVENIA, ETSI1_WORLD, "SI", "SLOVENIA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_SOUTH_AFRICA, FCC3_WORLD, "ZA", "SOUTH AFRICA", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_SPAIN, ETSI1_WORLD, "ES", "SPAIN", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_SRI_LANKA, FCC3_WORLD, "LK", "SRI LANKA", YES, NO, YES, YES, YES,
	 YES, NO, NO, 7000},
	{CTRY_SWEDEN, ETSI1_WORLD, "SE", "SWEDEN", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_SWITZERLAND, ETSI1_WORLD, "CH", "SWITZERLAND", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_SYRIA, NULL1_WORLD, "SY", "SYRIAN ARAB REPUBLIC", YES, NO, YES,
	 YES, YES, NO, NO, NO, 7000},
	{CTRY_TAIWAN, APL7_FCCA, "TW", "TAIWAN", YES, YES, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_TANZANIA, APL1_WORLD, "TZ", "TANZANIA", YES, YES, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_THAILAND, FCC3_WORLD, "TH", "THAILAND", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_TRINIDAD_Y_TOBAGO, FCC3_WORLD, "TT", "TRINIDAD AND TOBAGO", YES,
	 NO, YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_TUNISIA, ETSI3_WORLD, "TN", "TUNISIA", YES, NO, YES, YES, YES,
	 YES, NO, NO, 7000},
	{CTRY_TURKEY, ETSI3_WORLD, "TR", "TURKEY", YES, NO, YES, YES, YES, YES,
	 NO, NO, 7000},
	{CTRY_UGANDA, FCC3_WORLD, "UG", "UGANDA", YES, NO, NO, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_UKRAINE, ETSI9_WORLD, "UA", "UKRAINE", YES, NO, NO, YES, YES, YES,
	 YES, NO, 7000},
	{CTRY_UAE, ETSI1_WORLD, "AE", "UNITED ARAB EMIRATES", YES, NO, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_UNITED_KINGDOM, ETSI1_WORLD, "GB", "UNITED KINGDOM", YES, NO, YES,
	 YES, YES, YES, YES, YES, 7000},
	{CTRY_UNITED_STATES, FCC3_FCCA, "US", "UNITED STATES", YES, YES, YES,
	 YES, YES, YES, YES, YES, 5825},
	{CTRY_UNITED_STATES_AP, FCC6_FCCA, "US", "UNITED STATES2", YES,
	 YES, YES, YES, YES, YES, YES, YES, 7000},
	{CTRY_UNITED_STATES_PS, FCC4_FCCA, "PS",
	 "UNITED STATES (PUBLIC SAFETY)", YES, YES, YES, YES, YES, YES, YES,
	 YES, 7000},
	{CTRY_URUGUAY, FCC3_WORLD, "UY", "URUGUAY", YES, NO, YES, YES, YES, YES,
	 YES, YES, 7000},
	{CTRY_UZBEKISTAN, FCC3_FCCA, "UZ", "UZBEKISTAN", YES, YES, YES, YES,
	 YES, YES, YES, YES, 7000},
	{CTRY_VENEZUELA, FCC1_WORLD, "VE", "VENEZUELA", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_VIET_NAM, ETSI3_WORLD, "VN", "VIET NAM", YES, NO, YES, YES, YES,
	 YES, YES, YES, 7000},
	{CTRY_YEMEN, NULL1_WORLD, "YE", "YEMEN", YES, NO, YES, YES, YES, NO, NO,
	 NO, 7000},
	{CTRY_ZIMBABWE, NULL1_WORLD, "ZW", "ZIMBABWE", YES, NO, YES, YES, YES,
	 NO, NO, NO, 7000}
};

/* Bit masks for DFS per regdomain */

enum {
	NO_DFS = 0x0000000000000000ULL,
	DFS_FCC3 = 0x0000000000000001ULL,
	DFS_ETSI = 0x0000000000000002ULL,
	DFS_MKK4 = 0x0000000000000004ULL,
};

/* The table of frequency bands is indexed by a bitmask.  The ordering
 * must be consistent with the enum below.  When adding a new
 * frequency band, be sure to match the location in the enum with the
 * comments
 */

/* regulatory capabilities */
#define REGDMN_EEPROM_EEREGCAP_EN_KK_U1_EVEN    0x0080
#define REGDMN_EEPROM_EEREGCAP_EN_KK_U2         0x0100
#define REGDMN_EEPROM_EEREGCAP_EN_KK_MIDBAND    0x0200
#define REGDMN_EEPROM_EEREGCAP_EN_KK_U1_ODD     0x0400

static const COMMON_MODE_POWER common_mode_pwrtbl[] = {
	{4900, 5000, 17},
	{5000, 5100, 17},
	{5150, 5250, 17},       /* ETSI & MKK */
	{5250, 5350, 18},       /* ETSI */
	{5470, 5725, 20},       /* ETSI */
	{5725, 5825, 20},       /* Singapore */
	{5825, 5850, 23} /* Korea */
};

static const REG_DOMAIN ah_cmn_reg_domains[] = {

	{DEBUG_REG_DMN, FCC, DFS_FCC3},
	{APL1, FCC, NO_DFS},
	{APL2, FCC, NO_DFS},
	{APL3, FCC, DFS_FCC3},
	{APL4, FCC, NO_DFS},
	{APL5, FCC, NO_DFS},
	{APL6, ETSI, DFS_ETSI},
	{APL7, FCC, DFS_FCC3},
	{APL8, ETSI, NO_DFS},
	{APL9, ETSI, DFS_ETSI},
	{APL10, ETSI, DFS_ETSI},
	{APL11, ETSI, DFS_ETSI},
	{APL12, ETSI, DFS_ETSI},
	{ETSI1, ETSI, DFS_ETSI},
	{ETSI2, ETSI, DFS_ETSI},
	{ETSI3, ETSI, DFS_ETSI},
	{ETSI4, ETSI, DFS_ETSI},
	{ETSI5, ETSI, DFS_ETSI},
	{ETSI6, ETSI, DFS_ETSI},
	{ETSI8, ETSI, DFS_ETSI},
	{ETSI9, ETSI, DFS_ETSI},
	{FCC1, FCC, NO_DFS},
	{FCC2, FCC, NO_DFS},
	{FCC3, FCC, DFS_FCC3},
	{FCC4, FCC, DFS_FCC3},
	{FCC5, FCC, NO_DFS},
	{FCC6, FCC, DFS_FCC3},
	{MKK1, MKK, DFS_MKK4},
	{MKK2, MKK, DFS_MKK4},
	{MKK3, MKK, NO_DFS},
	{MKK4, MKK, DFS_MKK4},
	{MKK5, MKK, DFS_MKK4},
	{MKK6, MKK, NO_DFS},
	{MKK7, MKK, DFS_MKK4},
	{MKK8, MKK, DFS_MKK4},
	{MKK9, MKK, NO_DFS},
	{MKK10, MKK, DFS_MKK4},
	{MKK11, MKK, DFS_MKK4},
	{MKK12, MKK, DFS_MKK4},
	{MKK13, MKK, DFS_MKK4},
	{MKK14, MKK, DFS_MKK4},
	{MKK15, MKK, DFS_MKK4},
	{APLD, NO_CTL, NO_DFS},
	{ETSIA, NO_CTL, NO_DFS},
	{ETSIB, ETSI, NO_DFS},
	{ETSIC, ETSI, NO_DFS},
	{FCCA, FCC, NO_DFS},
	{MKKA, MKK, NO_DFS},
	{MKKC, MKK, NO_DFS},
	{WORLD, ETSI, NO_DFS},
	{WOR0_WORLD, NO_CTL, DFS_FCC3},
	{WOR01_WORLD, NO_CTL, DFS_FCC3},
	{WOR02_WORLD, NO_CTL, DFS_FCC3},
	{EU1_WORLD, NO_CTL, DFS_FCC3},
	{WOR1_WORLD, NO_CTL, DFS_FCC3},
	{WOR2_WORLD, NO_CTL, DFS_FCC3},
	{WOR3_WORLD, NO_CTL, DFS_FCC3},
	{WOR4_WORLD, NO_CTL, DFS_FCC3},
	{WOR5_ETSIC, NO_CTL, DFS_FCC3},
	{WOR9_WORLD, NO_CTL, DFS_FCC3},
	{WORA_WORLD, NO_CTL, DFS_FCC3},
	{WORB_WORLD, NO_CTL, DFS_FCC3},
	{WORC_WORLD, NO_CTL, DFS_FCC3},
	{NULL1, NO_CTL, NO_DFS},
};

typedef enum offset {
	BW20 = 0,
	BW40_LOW_PRIMARY = 1,
	BW40_HIGH_PRIMARY = 3,
	BW80,
	BWALL
} offset_t;

typedef struct _regdm_op_class_map {
	uint8_t op_class;
	uint8_t ch_spacing;
	offset_t offset;
	uint8_t channels[MAX_CHANNELS_PER_OPERATING_CLASS];
} regdm_op_class_map_t;

typedef struct _regdm_supp_op_classes {
	uint8_t num_classes;
	uint8_t classes[SIR_MAC_MAX_SUPP_OPER_CLASSES];
} regdm_supp_op_classes;

uint16_t cds_regdm_get_opclass_from_channel(uint8_t *country, uint8_t channel,
					    uint8_t offset);
uint16_t cds_regdm_get_chanwidth_from_opclass(uint8_t *country, uint8_t channel,
					    uint8_t opclass);
uint16_t cds_regdm_set_curr_opclasses(uint8_t num_classes, uint8_t *class);
uint16_t cds_regdm_get_curr_opclasses(uint8_t *num_classes, uint8_t *class);
